version: "3"
services:

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    networks:
    - network
    depends_on:
      - order-service
      - stock-service
      - payment-service

  # rabbitmq:
  #   image: rabbitmq:latest
  #   ports:
  #     # AMQP protocol port
  #     - '5672:5672'
  #     # HTTP management UI
  #     - '15672:15672'
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   # image: kubemq/kubemq-community:latest
  #   # ports: 
  #   #   - 9090:9090

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    networks:
    - network

  order-service:
    build: ./order
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/order_mongo.env
    depends_on:
      - rabbitmq3
    networks:
    - network

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/stock_mongo.env
    depends_on:
      - rabbitmq3
    networks:
    - network

  payment-service:
    build: ./payment
    image: user:latest
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/payment_mongo.env
    depends_on:
      - rabbitmq3
    networks:
    - network

  order-db:
    build: ./mongo/
    container_name: order-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    command: ["--bind_ip_all", "--replSet", "order", "--keyFile", "/keyfiles/order-keyfile"]
    # networks:
    # - network

  stock-db:
    build: ./mongo/
    container_name: stock-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    command: ["--bind_ip_all", "--replSet", "stock", "--keyFile", "/keyfiles/stock-keyfile"]
    # networks:
    # - network

  payment-db:
    build: ./mongo/
    container_name: payment-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    command: ["--bind_ip_all", "--replSet", "payment", "--keyFile", "/keyfiles/payment-keyfile"]
    # networks:
    # - network

  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
        - order-db
        - stock-db
        - payment-db
    volumes:
        - mongostatus:/data/
    # networks:
    # - network

volumes:
  mongostatus:

networks:
  # Declare our private network.  We must declare one for the magic
  # Docker DNS to work, but otherwise its default settings are fine.
  network: {}
