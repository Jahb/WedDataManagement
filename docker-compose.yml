version: "3"
services:

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"

  order-service:
    build: ./order
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    command: gunicorn -b 0.0.0.0:5000 app:app
    env_file:
      - env/order_mongo.env

  order-db:
    image: mongo:latest
    container_name: order-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    command: ["--replSet", "order", "--bind_ip_all", "--keyFile", "/data/keyfile"]
    volumes:
      - ./keyfiles/order-keyfile:/data/keyfile:ro

  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
        - order-db
    volumes:
        - mongostatus:/data/

    # command: sh -c "sleep 10 && mongo --eval 'rs.initiate()'"

  # stock-service:
  #   build: ./stock
  #   image: stock:latest
  #   command: gunicorn -b 0.0.0.0:5000 app:app
  #   env_file:
  #     - env/stock_mongo.env

  # stock-db:
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: mongo
  #   command: bash -cx "mongod --replSet 'stock' && mongo --eval 'rs.initiate()'"

  # payment-service:
  #   build: ./payment
  #   image: user:latest
  #   command: gunicorn -b 0.0.0.0:5000 app:app
  #   env_file:
  #     - env/payment_mongo.env

  # payment-db:
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: mongo
  #   command: bash -cx "mongod --replSet 'payment' && mongo --eval 'rs.initiate()'"

volumes:
  mongostatus: